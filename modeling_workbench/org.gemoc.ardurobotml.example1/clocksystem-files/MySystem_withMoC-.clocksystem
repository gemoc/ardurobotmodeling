
"Some global constants"
|system moccmllibs ccsllibs|
"MoCCML librairies specifications" 

	"CCSL librairies specifications"


"Instanciation" 


system := ClockSystem named: 'MySystem_withMoC-'.
system addLibrary:moccmllibs asDictionary.
"system addLibs:ccsllibs asDictionary."

"clocks for FSMClock localClock" 
	system addClocks: #(tickClocklocalClock ).
"clocks for TFSM Go_safely_to_destination" 
	system addClocks: #(initializeEventGo_safely_to_destination ).
"internal clocks for ardurobotml::TFSM Go_safely_to_destination" 
    system addInternalClocks: #(oneTickOnlyClockGo_safely_to_destination ).
"clocks for Action go" 
	system addClocks: #(beginClockgo endClockgo ).
"internal clocks for ardurobotml::Action go" 
    system addInternalClocks: #(lastEndClockgo ).
"clocks for Action stop2" 
	system addClocks: #(beginClockstop2 endClockstop2 ).
"internal clocks for ardurobotml::Action stop2" 
    system addInternalClocks: #(lastEndClockstop2 ).
"clocks for State S1_Initialize" 
	system addClocks: #(enteringClockS1_Initialize leavingClockS1_Initialize ).
"internal clocks for ardurobotml::State S1_Initialize" 
    system addInternalClocks: #(firstBeginS1_Initialize allOutgoingTransitionS1_Initialize allInputTransitionS1_Initialize ).
"clocks for State S2_Execute" 
	system addClocks: #(enteringClockS2_Execute leavingClockS2_Execute ).
"internal clocks for ardurobotml::State S2_Execute" 
    system addInternalClocks: #(firstBeginS2_Execute allOutgoingTransitionS2_Execute allInputTransitionS2_Execute ).
"clocks for Transition from_S1_to_S2" 
	system addClocks: #(fireClockfrom_S1_to_S2 ).
"internal clocks for ardurobotml::Transition from_S1_to_S2" 
    system addInternalClocks: #(lastEndClockfrom_S1_to_S2 eventHappenedClockfrom_S1_to_S2 sensitiveEventfrom_S1_to_S2 leavingClockfrom_S1_to_S2 ).

"relations for FSMClock localClock" 
"expressions used by  TFSM Go_safely_to_destination" 
	system allOneTickAndNoMore: #(initializeEventGo_safely_to_destination) named: #oneTickOnlyClockGo_safely_to_destination. 
"relations for TFSM Go_safely_to_destination" 
	"initializeOnlyOnceInvariant in TFSM Go_safely_to_destination"
		system library: #Kernel relation: #Coincides clocks: #(initializeEventGo_safely_to_destination  oneTickOnlyClockGo_safely_to_destination).

	"initFirstInvariant in TFSM Go_safely_to_destination"
		system library: #Kernel relation: #Precedes clocks: #(initializeEventGo_safely_to_destination  enteringClockS1_Initialize).

	"oneTransitionAtATime in TFSM Go_safely_to_destination"
		system library: #Kernel relation: #Exclusion clocks: #().

"expressions used by  Action go" 
	system all: #() named: #lastEndClockgo. 
"relations for Action go" 
	"beginThenEndInvariant in Action go"
		system library: #Kernel relation: #Alternates clocks: #(beginClockgo  endClockgo).

	"tickAfterLast in Action go"
		system library: #Kernel relation: #Precedes clocks: #(lastEndClockgo  beginClockgo).

"expressions used by  Action stop2" 
	system all: #() named: #lastEndClockstop2. 
"relations for Action stop2" 
	"beginThenEndInvariant in Action stop2"
		system library: #Kernel relation: #Alternates clocks: #(beginClockstop2  endClockstop2).

	"tickAfterLast in Action stop2"
		system library: #Kernel relation: #Precedes clocks: #(lastEndClockstop2  beginClockstop2).

"expressions used by  State S1_Initialize" 
	system all: #() named: #firstBeginS1_Initialize. 
	system allUnion: #() named: #allOutgoingTransitionS1_Initialize. 
	system allUnion: #() named: #allInputTransitionS1_Initialize. 
"relations for State S1_Initialize" 
	"enterThenLeaveInvariant in State S1_Initialize"
		system library: #Kernel relation: #Alternates clocks: #(enteringClockS1_Initialize  leavingClockS1_Initialize).

	"oneActionAtATime in State S1_Initialize"
		system library: #Kernel relation: #Exclusion clocks: #().

	"tickWhenEnteringState in State S1_Initialize"
		system library: #Kernel relation: #Precedes clocks: #(enteringClockS1_Initialize  firstBeginS1_Initialize).

	"leaveWhenOneTransitionFires in State S1_Initialize"
		system library: #Kernel relation: #Coincides clocks: #(allOutgoingTransitionS1_Initialize  leavingClockS1_Initialize).

	"enterWhenOneTransitionFires in State S1_Initialize"
		system library: #Kernel relation: #Precedes clocks: #(allInputTransitionS1_Initialize  enteringClockS1_Initialize).

"expressions used by  State S2_Execute" 
	system all: #() named: #firstBeginS2_Execute. 
	system allUnion: #() named: #allOutgoingTransitionS2_Execute. 
	system allUnion: #() named: #allInputTransitionS2_Execute. 
"relations for State S2_Execute" 
	"enterThenLeaveInvariant in State S2_Execute"
		system library: #Kernel relation: #Alternates clocks: #(enteringClockS2_Execute  leavingClockS2_Execute).

	"oneActionAtATime in State S2_Execute"
		system library: #Kernel relation: #Exclusion clocks: #().

	"tickWhenEnteringState in State S2_Execute"
		system library: #Kernel relation: #Precedes clocks: #(enteringClockS2_Execute  firstBeginS2_Execute).

	"leaveWhenOneTransitionFires in State S2_Execute"
		system library: #Kernel relation: #Coincides clocks: #(allOutgoingTransitionS2_Execute  leavingClockS2_Execute).

	"enterWhenOneTransitionFires in State S2_Execute"
		system library: #Kernel relation: #Precedes clocks: #(allInputTransitionS2_Execute  enteringClockS2_Execute).

"expressions used by  Transition from_S1_to_S2" 
	system all: #() named: #lastEndClockfrom_S1_to_S2. 
	system all: #() named: #eventHappenedClockfrom_S1_to_S2. 
	system allSampledOn: #(enteringClockS1_Initialize) named: #sensitiveEventfrom_S1_to_S2. 
	system all: #() named: #leavingClockfrom_S1_to_S2. 
"relations for Transition from_S1_to_S2" 
	"fireWhenLasActionEnds in Transition from_S1_to_S2"
		system library: #Kernel relation: #Precedes clocks: #(lastEndClockfrom_S1_to_S2  fireClockfrom_S1_to_S2).

	"fireWhenEventHappens in Transition from_S1_to_S2"
		system library: #Kernel relation: #Coincides clocks: #(sensitiveEventfrom_S1_to_S2  fireClockfrom_S1_to_S2).

	"fireWhenNoGuard in Transition from_S1_to_S2"
		system library: #Kernel relation: #Coincides clocks: #(leavingClockfrom_S1_to_S2  fireClockfrom_S1_to_S2).


